<!--这个就是模仿ros内部的gmapping写的-->
<launch>
  <arg name="rviz" default="false"/>
  <arg name="scan_process" default="true"/>
  <arg name="scan_topic" default="scan_filtered"/>
  <arg name="custom_gmapping_launch_file" default="$(find fare_well)/launch/includes/gmapping.launch.xml"/>
  <arg name="simulation" default="true"/>
  <arg name="move_base" default="true"/>
  <arg name="laser_type" default="hokuyo" />

  <!-- laser driver -->
  <!--<include file="$(find fare_well)/launch/includes/hokuyo_laser.launch" />-->


<!--开启激光雷达滤波器-->
  <group if="$(arg scan_process)">
    <node name="laser_filter"  pkg="turtlebot_navigation" type="laser_footprint_filter" />
  </group>

  <!--启动gmaping,全部采用自己的便于更换参数 应该装上hu的驱动-->
  <include file="$(arg custom_gmapping_launch_file)">
  <arg name="scan_topic" value="$(arg scan_topic)" />
  </include>
  
  <!-- Move base -->
  <group if="$(arg move_base)">
  <include file="$(find fare_well)/launch/includes/move_base.launch.xml">
  <arg name="laser_topic" value="$(arg scan_topic)" />
  <arg name="type" value="gmapping"/>
  </include>
  </group>


  <group if="$(arg simulation)">

  <node pkg="fake_localization" type="fake_localization" name="fake_localization" output="screen" />
  </group>
  

  <group if="$(arg rviz)">
  <include file="$(find turtlebot_rviz_launchers)/launch/view_navigation.launch"/>
  </group>
  <node name="empty_node" type="empty_node" pkg="test" required="true" />
</launch>
